image: alpine

stages:
  - deploy

variables:
  APP_NAME: echoserver
  ARGOCD_AUTH_TOKEN: "IT SHOULD BE INJECTED THROUGH CI/CD VARIABLES"
  ARGOCD_SERVER: "IT SHOULD BE INJECTED THROUGH CI/CD VARIABLES"
  RELEASE_SELECTOR: "platform.ardikabs.com/release"
  ENVIRONMENT_SELECTOR: "platform.ardikabs.com/environment"
  CLUSTER_SELECTOR: "platform.ardikabs.com/cluster"

before_script:
  - |
    echo "Setting up the environment..."

    curl -s "https://raw.githubusercontent.com/ardikabs/libsh/main/install.sh" | bash
    export RELEASE_SELECTOR=platform.example.com/release
    export ENVIRONMENT_SELECTOR=platform.example.com/environment
    export CLUSTER_SELECTOR=platform.example.com/cluster

  - export IMAGE="${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/${APP_NAME}"

deploy-staging:
  stage: deploy
  script:
    - dpl --environment staging --image "${IMAGE}:latest" --restart s-id-go-01-core-echoserver
  only:
    refs:
      - main

deploy-production:
  stage: deploy
  script:
    - dpl --environment production --image "${IMAGE}:${CI_COMMIT_SHA}" --restart p-id-go-01-core-echoserver
  only:
    refs:
      - tags
